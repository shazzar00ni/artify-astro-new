---
// Features.astro component

const features = [
  {
    title: "AI Image Generation",
    description: "Create stunning visuals with our advanced AI image generation technology.",
    icon: "image",
  },
  {
    title: "Text to Art",
    description: "Transform your ideas into beautiful artworks with just a few words.",
    icon: "text",
  },
  {
    title: "Style Transfer",
    description: "Apply artistic styles to your photos with our neural network algorithms.",
    icon: "brush",
  },
  {
    title: "Creative Assistant",
    description: "Get intelligent suggestions to enhance your creative projects.",
    icon: "bulb",
  },
];
---

<section id="features" class="features">
  <div class="container">
    <div class="section-header">
      <h2>Powerful Features</h2>
      <p>Discover what makes Artify-AI the perfect tool for your creative projects</p>
    </div>
    
    <div class="features-grid">
      {features.map((feature) => (
        <div class="feature-card">
          <div class="feature-icon">
            {feature.icon === "image" && (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                <circle cx="8.5" cy="8.5" r="1.5"></circle>
                <polyline points="21 15 16 10 5 21"></polyline>
              </svg>
            )}
            {feature.icon === "text" && (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="4 7 4 4 20 4 20 7"></polyline>
                <line x1="9" y1="20" x2="15" y2="20"></line>
                <line x1="12" y1="4" x2="12" y2="20"></line>
              </svg>
            )}
            {feature.icon === "brush" && (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M12 19l7-7 3 3-7 7-3-3z"></path>
                <path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path>
                <path d="M2 2l7.586 7.586"></path>
                <circle cx="11" cy="11" r="2"></circle>
              </svg>
            )}
            {feature.icon === "bulb" && (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 18h6"></path>
                <path d="M10 22h4"></path>
                <path d="M12 2v4"></path>
                <path d="M4.93 10.93l2.83 2.83"></path>
                <path d="M16.24 13.76l2.83-2.83"></path>
                <path d="M12 19a7 7 0 1 0 0-14 7 7 0 0 0 0 14z"></path>
              </svg>
            )}
          </div>
          <h3>{feature.title}</h3>
          <p>{feature.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .features {
    padding: 5rem 0;
    background-color: var(--bg-light);
    transition: background-color 0.3s ease;
  }

  :global(body.dark-mode) .features {
    background-color: var(--bg-dark);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  h2 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--text-light);
    position: relative;
    display: inline-block;
  }

  h2::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: linear-gradient(90deg, #6366f1, #8b5cf6);
    border-radius: 2px;
  }

  :global(body.dark-mode) h2 {
    color: var(--text-dark);
  }

  .section-header p {
    font-size: 1.25rem;
    color: var(--text-light);
    max-width: 700px;
    margin: 0 auto;
  }

  :global(body.dark-mode) .section-header p {
    color: var(--text-dark);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    background-color: white;
    border-radius: 0.75rem;
    padding: 2rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
  }

  :global(body.dark-mode) .feature-card {
    background-color: #2d3748;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3);
  }

  .feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 20px -3px rgba(0, 0, 0, 0.15);
  }

  :global(body.dark-mode) .feature-card:hover {
    box-shadow: 0 15px 20px -3px rgba(0, 0, 0, 0.4);
  }

  .feature-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    margin-bottom: 1.5rem;
    color: white;
  }

  h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: var(--text-light);
  }

  :global(body.dark-mode) h3 {
    color: var(--text-dark);
  }

  .feature-card p {
    color: #718096;
    line-height: 1.6;
    font-size: 1rem;
  }

  :global(body.dark-mode) .feature-card p {
    color: #cbd5e0;
  }

  @media (max-width: 768px) {
    .features-grid {
      grid-template-columns: 1fr;
    }
  }
</style>